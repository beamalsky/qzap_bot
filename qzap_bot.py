import requests
import lxml.html


def get_zine():
    qzap_url = 'https://archive.qzap.org'
    a_id = 'splashRandomObject'

    # first, get the url for a random zine generated by QZAP
    entry = requests.get(qzap_url).text
    page = lxml.html.fromstring(entry)
    random_zine = page.xpath("//a[@id='%s']" % a_id)[0].attrib['href']
    zine_url = qzap_url + random_zine

    # then, scrape that zine
    title = ''
    created_by = ''
    date = ''
    place_created = ''

    entry = requests.get(zine_url).text
    page = lxml.html.fromstring(entry)
    detail_body = page.xpath("//div[@id='detailBody']")[0]

    title = detail_body.xpath("./h1")[0].text_content()

    left_col_units = detail_body.xpath(
        "./div[@id='leftCol']/div[@class='unit']"
    )

    for unit in left_col_units:
        try:
            hed = unit.xpath(".//h2")[0].text_content()
            if hed == 'Created By':
                created_by = unit.xpath(
                    "./div[@class='unit']/a"
                )[1].text_content()
            if hed == 'Date':
                date = unit.text_content().split('Date')[1].split(' ')[0]
                date = '(' + date + ')'
            if hed == 'Place Created':
                place_created = unit.text_content().split(
                    'Place Created'
                )[1].split(' (')[0]
        except IndexError:
            pass

    x = get_images(page)

    tweet = '{title}\n{created_by} {date}\n{place_created}\n{zine_url}'.format(
        title=title,
        created_by=created_by,
        date=date,
        place_created=place_created,
        zine_url=zine_url
    )

    print(tweet)

    return ""


def get_images(page):
    pdf_ids = page.xpath(
        "//div[starts-with(@id,'BookReader')]"
    )[1].attrib['id'].split('_')

    pdf_url = 'https://archive.qzap.org/index.php/Detail/Object/' \
        'DownloadRepresentation/object_id/{object_id}/representation_id' \
        '/{representation_id}/download/1/version/original'.format(
            object_id=pdf_ids[1],
            representation_id=pdf_ids[2]
        )

    return pdf_url
